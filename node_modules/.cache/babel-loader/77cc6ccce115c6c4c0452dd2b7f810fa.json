{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Desktop\\\\React-Website\\\\src\\\\components\\\\Experience.js\";\nimport React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport profile from \"../profile\";\nimport moment from \"moment\";\nimport { Media } from \"reactstrap\";\n\nfunction getDuration(duration) {\n  const years = parseInt(duration / 12);\n  const months = duration > 12 ? duration % 12 : duration;\n  return (years > 0 ? years + \" year\" + (years > 1 ? \"s\" : \"\") + \" and \" : \"\") + (months > 0 ? months + \" month\" + (months > 1 ? \"s\" : \"\") : \"\");\n}\n\n;\n\nclass Experience extends React.Component {\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, profile.experiences.map(function (experience, i) {\n      moment.locale('en');\n      const totalDuration = experience.roles.reduce(function (cnt, role) {\n        const startDate = moment(role.startDate);\n        const timeEnd = moment(role.currentJob ? new Date() : new Date(role.endDate));\n        const duration = moment.duration(timeEnd.diff(startDate));\n        return Number(cnt) + Number(duration.asMonths().toPrecision(1));\n      }, 0);\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Media, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Media, {\n        left: true,\n        top: true,\n        href: experience.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Media, {\n        object: true,\n        src: experience.logo,\n        alt: experience.companyName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })), React.createElement(Media, {\n        body: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Media, {\n        heading: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: experience.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, experience.companyName), React.createElement(\"span\", {\n        className: \"jobTotalDuration\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, getDuration(totalDuration))), experience.roles.map(function (role, i) {\n        const startDate = moment(role.startDate);\n        const timeEnd = moment(role.currentJob ? new Date() : new Date(role.endDate));\n        const duration = Number(moment.duration(timeEnd.diff(startDate)).asMonths().toPrecision(1));\n        return React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, role.title), React.createElement(\"span\", {\n          className: \"jobDuration\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, startDate.format('MMM YYYY'), \" - \", role.currentJob ? 'Present' : timeEnd.format('MMM YYYY'), \" (\", getDuration(duration), \")\"), React.createElement(\"span\", {\n          className: \"jobLocation\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, role.location), React.createElement(\"p\", {\n          className: \"jobDescription\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, role.description));\n      }))));\n    }))));\n  }\n\n}\n\nexport default Experience;","map":{"version":3,"sources":["C:\\Users\\Michael\\Desktop\\React-Website\\src\\components\\Experience.js"],"names":["React","Container","Row","Col","profile","moment","Media","getDuration","duration","years","parseInt","months","Experience","Component","render","experiences","map","experience","i","locale","totalDuration","roles","reduce","cnt","role","startDate","timeEnd","currentJob","Date","endDate","diff","Number","asMonths","toPrecision","url","logo","companyName","title","format","location","description"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport profile from \"../profile\";\r\nimport moment from \"moment\";\r\nimport { Media } from \"reactstrap\";\r\n\r\nfunction getDuration(duration) {\r\n  const years = parseInt(duration / 12);\r\n  const months = (duration > 12)? duration % 12 : duration\r\n  return (years > 0? years + \" year\" + (years > 1? \"s\": \"\") + \" and \" : \"\") + (months > 0? months + \" month\" + (months > 1? \"s\": \"\") : \"\");\r\n};\r\n\r\nclass Experience extends React.Component {\r\n  render() {\r\n    return <Container>\r\n      <Row>\r\n        <Col>\r\n          {profile.experiences.map(function (experience, i) {\r\n            moment.locale('en');\r\n\r\n            const totalDuration = experience.roles.reduce(function (cnt, role) {\r\n              const startDate = moment(role.startDate);\r\n              const timeEnd = moment(role.currentJob ? new Date() : new Date(role.endDate));\r\n              const duration = moment.duration(timeEnd.diff(startDate));\r\n              return Number(cnt) + Number(duration.asMonths().toPrecision(1));\r\n            }, 0);\r\n\r\n            return (\r\n              <div key={i}>\r\n                <Media>\r\n                  <Media left top href={experience.url}>\r\n                    <Media object src={experience.logo} alt={experience.companyName}/>\r\n                  </Media>\r\n                  <Media body>\r\n                    <Media heading>\r\n                      <a href={experience.url}>{experience.companyName}</a>\r\n                      <span className=\"jobTotalDuration\">{getDuration(totalDuration)}</span>\r\n                    </Media>\r\n\r\n                    {experience.roles.map(function (role, i) {\r\n                      const startDate = moment(role.startDate);\r\n                      const timeEnd = moment(role.currentJob ? new Date() : new Date(role.endDate));\r\n                      const duration = Number(moment.duration(timeEnd.diff(startDate)).asMonths().toPrecision(1));\r\n\r\n                      return <div key={i}>\r\n                        <h5>{role.title}</h5>\r\n                        <span\r\n                          className=\"jobDuration\">{startDate.format('MMM YYYY')} - {role.currentJob ? 'Present' : timeEnd.format('MMM YYYY')} ({getDuration(duration)})</span>\r\n                        <span className=\"jobLocation\">{role.location}</span>\r\n                        <p className=\"jobDescription\">{role.description}</p>\r\n                      </div>\r\n                    })}\r\n                  </Media>\r\n                </Media>\r\n              </div>\r\n            );\r\n          })}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  }\r\n}\r\n\r\nexport default Experience;\r\n"]},"metadata":{},"sourceType":"module"}